name: flutter_travels_apps
description: "A new Flutter project."
# The following line prevents the package from being accidentally published to
# pub.dev using `flutter pub publish`. This is preferred for private packages.
publish_to: 'none' # Remove this line if you wish to publish to pub.dev

# The following defines the version and build number for your application.
# A version number is three numbers separated by dots, like 1.2.43
# followed by an optional build number separated by a +.
# Both the version and the builder number may be overridden in flutter
# build by specifying --build-name and --build-number, respectively.
# In Android, build-name is used as versionName while build-number used as versionCode.
# Read more about Android versioning at https://developer.android.com/studio/publish/versioning
# In iOS, build-name is used as CFBundleShortVersionString while build-number is used as CFBundleVersion.
# Read more about iOS versioning at
# https://developer.apple.com/library/archive/documentation/General/Reference/InfoPlistKeyReference/Articles/CoreFoundationKeys.html
# In Windows, build-name is used as the major, minor, and patch parts
# of the product and file versions while build-number is used as the build suffix.
version: 1.0.0+1

environment:
  sdk: ^3.9.2

# Dependencies specify other packages that your package needs in order to work.
# To automatically upgrade your package dependencies to the latest versions
# consider running `flutter pub upgrade --major-versions`. Alternatively,
# dependencies can be manually updated by changing the version numbers below to
# the latest version available on pub.dev. To see which dependencies have newer
# versions available, run `flutter pub outdated`.
dependencies:
  flutter:
    sdk: flutter

  # The following adds the Cupertino Icons font to your application.
  # Use with the CupertinoIcons class for iOS style icons.
  cupertino_icons: ^1.0.8
  flutter_native_splash: ^2.4.7
  smooth_page_indicator: ^1.2.1
  hive_flutter: ^1.1.0
  salomon_bottom_bar: ^3.3.2
  font_awesome_flutter: ^10.10.0
  google_nav_bar: ^5.0.7
  material_neumorphic_icon: ^1.1.3
  syncfusion_flutter_datepicker: ^31.2.2
  intl: ^0.20.2
  flutter_riverpod: ^3.0.3
  get: ^4.7.2
  firebase_core: ^4.2.0
  cloud_firestore: ^6.0.3
  firebase_database: ^12.0.3
  vietmap_flutter_gl: ^4.1.0
  firebase_auth: ^6.1.1
  provider: ^6.1.5+1
  url_launcher: ^6.3.2
  permission_handler: ^11.4.0
  # Image handling
  image_picker: ^1.1.2
  image_cropper: ^8.0.2
  firebase_storage: ^13.0.3
  cached_network_image: ^3.4.1
  # Review & Rating
  flutter_rating_bar: ^4.0.1
  # Search & Sharing
  share_plus: ^10.1.2
  path_provider: ^2.1.4
  pdf: ^3.11.1
  printing: ^5.13.3
  # Push Notifications - temporarily disabled due to dependency conflicts
  # firebase_messaging: ^15.1.0
  # flutter_local_notifications: ^18.0.1

dev_dependencies:
  flutter_test:
    sdk: flutter

  # The "flutter_lints" package below contains a set of recommended lints to
  # encourage good coding practices. The lint set provided by the package is
  # activated in the `analysis_options.yaml` file located at the root of your
  # package. See that file for information about deactivating specific lint
  # rules and activating additional ones.
  flutter_lints: ^5.0.0

# For information on the generic Dart part of this file, see the
# following page: https://dart.dev/tools/pub/pubspec

# The following section is specific to Flutter packages.
flutter:

  # The following line ensures that the Material Icons font is
  # included with your application, so that you can use the icons in
  # the material Icons class.
  uses-material-design: true

  # To add assets to your application, add an assets section, like this:
  assets:
    - assets/images/
    - assets/icons/

  # An image asset can refer to one or more resolution-specific "variants", see
  # https://flutter.dev/to/resolution-aware-images

  # For details regarding adding assets from package dependencies, see
  # https://flutter.dev/to/asset-from-package

  # To add custom fonts to your application, add a fonts section here,
  # in this "flutter" section. Each entry in this list should have a
  # "family" key with the font family name, and a "fonts" key with a
  # list giving the asset and other descriptors for the font. For
  # example:
  # fonts:
  #   - family: Schyler
  #     fonts:
  #       - asset: fonts/Schyler-Regular.ttf
  #       - asset: fonts/Schyler-Italic.ttf
  #         style: italic
  #   - family: Trajan Pro
  #     fonts:
  #       - asset: fonts/TrajanPro.ttf
  #       - asset: fonts/TrajanPro_Bold.ttf
  #         weight: 700
  #
# For details regarding fonts from package dependencies,
# see https://flutter.dev/to/font-from-package

flutter_native_splash:
  # This package generates native code to customize Flutter's default white native splash screen
  # with background color and splash image.
  # Customize the parameters below, and run the following command in the terminal:
  # dart run flutter_native_splash:create
  # To restore Flutter's default white splash screen, run the following command in the terminal:
  # dart run flutter_native_splash:remove

  # IMPORTANT NOTE: These parameters only affect the native splash screen on Android and iOS.
  # They do not affect the Flutter-rendered splash screen that users see while the Flutter app is initializing.
  # Please see https://goo.gl/d3N7Dq for details on how to modify the Flutter-rendered splash screen.

  # color or background_image is the only required parameter.  Use color to set the background
  # of your splash screen to a solid color.  For background_image, use the path to a png image.
  # If a background_image is specified, background_color_dark, color_dark, gradient, and
  # gradient_dark are ignored.
  color: "#ffffff"
  #background_image: "assets/background.png"

  # Optional parameters are listed below.
  image: assets/images/Splash_Logo.png

  # The branding property allows you to specify an image used as branding in the splash screen.
  # It must be a png file and will be displayed at the bottom of the screen (Android) or
  # centered in the bottom third (iOS).
  #branding: assets/dart.png

  # To position the branding image at the bottom of the screen you can use bottom, bottomRight,
  # and bottomLeft. The default values is bottom if not specified or specified something else.
  #branding_mode: bottom

  # The color_dark, background_image_dark, image_dark, branding_dark are parameters that set the background
  # and image when the device is in dark mode. If dark mode is not supported by the app
  # (as determined by the flutter app theme), then these are ignored. When dark mode is supported,
  # the color_dark or background_image_dark is required.  color_dark and background_image_dark cannot both be
  # set.  Similarly, image_dark and branding_dark cannot both be set.
  color_dark: "#121212"
  image_dark: assets/images/Splash_Logo.png

  # From Android 12 onwards, the splash screen is handled differently than previous versions.
  # Please visit https://developer.android.com/guide/topics/ui/splash-screen
  # Following are Android 12 specific parameter.
  android_12:
    # The image parameter sets the splash screen icon image.  If this parameter is not specified,
    # the app's launcher icon will be used instead.
    # Please note that the splash screen will be clipped to a circle on the center of the screen.
    # App icon with an icon background: This should be 960×960 pixels, and fit within a circle
    # 576 pixels in diameter.
    # App icon without an icon background: This should be 1152×1152 pixels, and fit within a circle
    # 768 pixels in diameter.
    image: assets/images/Splash_Logo.png

    # Splash screen background color.
    color: "#ffffff"

    # App icon background color.
    #icon_background_color: "#111111"

    # The branding property allows you to specify an image used as branding in the splash screen.
    #branding: assets/dart.png

    # The image_dark, color_dark, icon_background_color_dark, and branding_dark set values that
    # apply when the device is in dark mode. If dark mode is not supported by the app (as determined
    # by the flutter app theme), then these are ignored.
    image_dark: assets/images/Splash_Logo.png
    color_dark: "#121212"
    #icon_background_color_dark: "#eeeeee"

  # The android, ios and web parameters can be used to disable generating a splash screen on a given
  # platform.
  android: true
  ios: true
  web: false

  # Platform specific images can be specified with the following parameters, which will override
  # the respective parameter.  You may specify all, selected, or none of these parameters:
  #color_android: "#42a5f5"
  #color_dark_android: "#042a49"
  #color_ios: "#42a5f5"
  #color_dark_ios: "#042a49"
  #image_android: assets/splash-android.png
  #image_dark_android: assets/splash-android-dark.png
  #image_ios: assets/splash-ios.png
  #image_dark_ios: assets/splash-ios-dark.png
  #background_image_android: "assets/background-android.png"
  #background_image_dark_android: "assets/background-android-dark.png"
  #background_image_ios: "assets/background-ios.png"
  #background_image_dark_ios: "assets/background-ios-dark.png"
  #branding_android: assets/brand-android.png
  #branding_dark_android: assets/brand-android-dark.png
  #branding_ios: assets/brand-ios.png
  #branding_dark_ios: assets/brand-ios-dark.png

  # The position of the splash image can be set with android_gravity, ios_content_mode, and
  # web_image_mode parameters.  All default to center.
  #
  # android_gravity can be one of the following Android Gravity (see
  # https://developer.android.com/reference/android/view/Gravity): bottom, center,
  # center_horizontal, center_vertical, clip_horizontal, clip_vertical, end, fill, fill_horizontal,
  # fill_vertical, left, right, start, or top.
  #android_gravity: center
  #
  # ios_content_mode can be one of the following iOS UIView.ContentMode (see
  # https://developer.apple.com/documentation/uikit/uiview/contentmode): scaleToFill,
  # scaleAspectFit, scaleAspectFill, center, top, bottom, left, right, topLeft, topRight,
  # bottomLeft, or bottomRight.
  #ios_content_mode: center
  #
  # web_image_mode can be one of the following modes: center, contain, stretch, and cover.
  #web_image_mode: center

  # The screen orientation can be set in Android with the android_screen_orientation parameter.
  # Valid parameters can be found here:
  # https://developer.android.com/guide/topics/manifest/activity-element#screen
  #android_screen_orientation: sensorLandscape

  # To hide the notification bar, use the fullscreen parameter.  Has no effect in web since web
  # has no notification bar.  Defaults to false.
  # NOTE: Unlike Android, iOS will not automatically show the notification bar when the app loads.
  #       To show the notification bar, add the following code to your Flutter app:
  #       WidgetsFlutterBinding.ensureInitialized();
  #       SystemChrome.setEnabledSystemUIMode(SystemUiMode.manual, overlays: [SystemUiOverlay.top]);
  fullscreen: true

  # If you have changed the name(s) of your info.plist file(s), you can specify the filename(s)
  # with the info_plist_files parameter.  Remove only the # characters in the three lines below,
  # do not remove any spaces:
  #info_plist_files:
  #  - 'ios/Runner/Info-Debug.plist'
  #  - 'ios/Runner/Info-Release.plist'